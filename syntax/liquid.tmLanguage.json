{
  "information_for_contributors": [
    "",
    "IMPORTANT",
    "",
    "These text mate grammars provide Liquid syntax highlighting support. This is NOT a forked",
    "grammar file not does it borrow implied patterns. If you wish to use, borrow or apply its logic",
    "you must first ask for permission. The grammars are written for usage within vscode and support all",
    "Liquid variations. The contents of this file in particular supports the Liquid Standard variation and it",
    "is from this grammar all additional Liquid variations are extended. The Embedded code regions of external",
    "scoped languages are made possible through grammar injections and liquid variation extensions can also be",
    "appropriated using grammar injections.",
    "",
    "USAGE PERMISSION",
    "",
    "Shopify employee/s or those working for Shopify do not have permission to use, borrow or even take inspiration",
    "from this grammar file. This grammar file was created for developers by a developer. The grammars are not for",
    "developers being paid by Shopify to take credit for in a attempt to get a gold star. Everyone else, feel free."
  ],
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Liquid",
  "scopeName": "source.liquid",
  "fileTypes": [
    "liquid"
  ],
  "injections": {
    "R:meta - (meta.embedded.*.html, meta.embedded.*.*.liquid)": {
      "comment": [
        "R: Injection ~ Embedded Languages allow for Liquid infusion.",
        "See the embedded.tmLanguage.json file for applied injections."
      ],
      "patterns": [
        {
          "include": "#tags"
        },
        {
          "include": "#output"
        }
      ]
    },
    "L:meta - (meta.attribute.*.html, source.css, source.js, source.json)": {
      "comment": [
        "L: Injection ~ Applied Liquid Syntax Highlighting within Markup tokens",
        "Our R: injection above ensures ejections, whereas this ensures injection."
      ],
      "patterns": [
        {
          "include": "#output"
        },
        {
          "include": "#tags"
        }
      ]
    },
    "L:entity.other.attribute-name.class.css": {
      "patterns": [
        {
          "include": "#tags"
        },
        {
          "include": "#output"
        }
      ]
    },
    "L:string - (string.quoted.*.html)": {
      "patterns": [
        {
          "include": "#tags"
        },
        {
          "include": "#output"
        }
      ]
    },
    "L:source.js": {
      "patterns": [
        {
          "match": "(?<=import)\\s+(?={[{%]-?)",
          "name": "punctuation.output.liquid"
        },
        {
          "include": "#tags"
        },
        {
          "include": "#output"
        }
      ]
    }
  },
  "patterns": [
    {
      "include": "#comment-block"
    },
    {
      "include": "#comment-line"
    },
    {
      "include": "#liquid-tag"
    },
    {
      "include": "#tags"
    },
    {
      "include": "#output"
    },
    {
      "include": "text.html.derivative"
    }
  ],
  "repository": {
    "comment-block": {
      "name": "comment.block.liquid",
      "begin": "{%-?\\s*\\bcomment\\b\\s*-?%}",
      "end": "{%-?\\s*\\bendcomment\\b\\s*-?%}"
    },
    "comment-line": {
      "name": "comment.line.liquid",
      "begin": "{%-?\\s*#\\s*",
      "end": "-?%}",
      "patterns": [
        {
          "name": "comment.hash.liquid",
          "match": "\\s*#\\s*"
        },
        {
          "name": "comment.delimiters.liquid",
          "match": "{%-?|-?%}"
        },
        {
          "name": "comment.hash.liquid",
          "begin": "^\\s*\\#\\s*",
          "end": "\\Z"
        }
      ]
    },
    "liquid-tag": {
      "name": "punctuation.output.liquid",
      "begin": "({%)(-)?\\s*(liquid)\\s+",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.liquid"
        },
        "2": {
          "name": "keyword.other.whitespace.liquid"
        },
        "3": {
          "name": "entity.name.tag.liquid.liquid"
        }
      },
      "end": "(-)?(%})",
      "endCaptures": {
        "1": {
          "name": "keyword.other.whitespace.liquid"
        },
        "2": {
          "name": "punctuation.definition.tag.end.liquid"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#entities"
        },
        {
          "include": "#objects"
        },
        {
          "include": "#numeric"
        },
        {
          "include": "#constants"
        },
        {
          "include": "#parameters"
        },
        {
          "include": "#operators"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#filters"
        },
        {
          "include": "#inferred"
        },
        {
          "include": "#invalid"
        }
      ]
    },
    "tags": {
      "name": "punctuation.output.liquid",
      "begin": "({%)(-)?(?!\\s*\\#)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.liquid"
        },
        "2": {
          "name": "keyword.other.whitespace.liquid"
        }
      },
      "end": "(-)?(%})",
      "endCaptures": {
        "1": {
          "name": "keyword.other.whitespace.liquid"
        },
        "2": {
          "name": "punctuation.definition.tag.end.liquid"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#entities"
        },
        {
          "include": "#liquid"
        },
        {
          "include": "#objects"
        },
        {
          "include": "#numeric"
        },
        {
          "include": "#range"
        },
        {
          "include": "#constants"
        },
        {
          "include": "#parameters"
        },
        {
          "include": "#operators"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#filters"
        },
        {
          "include": "#inferred"
        }
      ]
    },
    "output": {
      "name": "punctuation.output.liquid",
      "begin": "({{)(-)?",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.liquid"
        },
        "2": {
          "name": "keyword.other.whitespace.liquid"
        }
      },
      "patterns": [
        {
          "include": "#objects"
        },
        {
          "include": "#numeric"
        },
        {
          "include": "#constants"
        },
        {
          "include": "#parameters"
        },
        {
          "include": "#invalid"
        },
        {
          "include": "#operators"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#filters"
        }
      ],
      "end": "(-)?(}})",
      "endCaptures": {
        "1": {
          "name": "keyword.other.whitespace.liquid"
        },
        "2": {
          "name": "punctuation.definition.tag.end.liquid"
        }
      }
    },
    "parameters": {
      "patterns": [
        {
          "name": "variable.parameter.liquid",
          "match": "(?![\\|\\S]),?\\s*\\b([a-zA-Z0-9_-]+)\\b\\s*(?=:)"
        }
      ]
    },
    "numeric": {
      "patterns": [
        {
          "name": "constant.numeric.index.liquid",
          "match": "(?<=\\[)\\s*\\d+\\s*(?=\\])"
        },
        {
          "name": "constant.numeric.integer.liquid",
          "match": "(?![a-zA-Z_])([.+-])?\\d+\\.\\d+[\\d.]+?(?![\\.\\)])",
          "captures": {
            "1": {
              "name": "keyword.other.arithmetic.liquid"
            }
          }
        },
        {
          "name": "constant.numeric.float.liquid",
          "match": "\\s(?:[.+-])?\\d+[\\d.]+?(?![\\.\\w])"
        },
        {
          "name": "constant.numeric.natural.liquid",
          "match": "\\s\\d+\\s"
        },
        {
          "name": "constant.numeric.natural.liquid",
          "match": "(?<=\\s*\\()\\d+(?=\\.\\.)"
        },
        {
          "name": "constant.numeric.natural.liquid",
          "match": "(?<=\\d+\\.\\.)\\d+(?=\\s*\\))"
        },
        {
          "name": "constant.numeric.natural.liquid",
          "match": "(?<=(?:\\!=|\\=\\=|\\<|\\>|\\>\\=|\\<\\=)\\s*)\\d?[\\d.]+?\\d"
        },
        {
          "name": "constant.numeric.natural.liquid",
          "match": "\\s+\\d?[\\d.]+?\\d\\s*(?=(?:\\!=|\\=\\=|\\<|\\>|\\>\\=|\\<\\=))"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language.liquid",
          "match": "(?!(?<=(?:assign|increment|capture)\\s+))\\b(false|true|nil|null|empty|blank)\\b"
        },
        {
          "name": "constant.character.entity.liquid",
          "match": "(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)",
          "captures": {
            "1": {
              "name": "punctuation.definition.entity.html"
            },
            "3": {
              "name": "punctuation.definition.entity.html"
            }
          }
        }
      ]
    },
    "invalid": {
      "patterns": [
        {
          "match": "&",
          "name": "invalid.illegal.bad-ampersand.liquid"
        },
        {
          "match": "(\\[)(\\|)(?=[^\\]]*)(?=\\])",
          "captures": {
            "2": {
              "name": "invalid.illegal.filter.liquid"
            },
            "3": {
              "name": "invalid.illegal.filter.liquid"
            }
          }
        },
        {
          "match": "(?=if|unless|elsif)\\s*[^%}]+\\s(in)\\s+",
          "captures": {
            "3": {
              "name": "invalid.illegal.operator.liquid"
            }
          }
        },
        {
          "name": "invalid.illegal.filter.liquid",
          "match": "(?<=\\s)(\\+|\\-|\\/|\\*)(?=\\s)"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "punctuation.definition.tag.range.liquid",
          "begin": "(?:in\\s*)\\(",
          "end": "\\)"
        },
        {
          "match": "\\=",
          "name": "keyword.operator.assignment.augmented.liquid"
        },
        {
          "match": "(?<=[a-zA-Z_])\\.(?!\\.)",
          "name": "keyword.other.dot.liquid"
        },
        {
          "name": "keyword.operator.spread.liquid",
          "match": "(?<=[a-zA-Z0-9_])\\.\\.(?=[a-zA-Z0-9_])"
        },
        {
          "name": "keyword.operator.logical.liquid",
          "match": "\\s+\\b(and|or|contains)\\b\\s+"
        },
        {
          "name": "keyword.operator.equality.liquid",
          "match": "\\s+(\\!=|\\=\\=|\\<|\\>|\\>\\=|\\<\\=)\\s+"
        },
        {
          "name": "keyword.operator.assignment.colon.liquid",
          "match": "\\:"
        },
        {
          "name": "keyword.other.array-item.liquid",
          "match": "\\[|\\]"
        },
        {
          "name": "entity.name.tag.method.liquid",
          "match": "\\s+\\b(in|as|with|for)\\b"
        },
        {
          "name": "variable.parameter.liquid",
          "match": "\\s+\\b(offset|limit|reverse|cols|reversed)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.single.liquid",
          "begin": "'",
          "end": "'"
        },
        {
          "name": "string.quoted.double.liquid",
          "begin": "\"",
          "end": "\""
        }
      ]
    },
    "filters": {
      "patterns": [
        {
          "name": "support.function.with-args.liquid",
          "match": "(\\|\\s*)(?![\\.0-9])([a-zA-Z0-9_-]+)(?=\\:\\s*)",
          "captures": {
            "1": {
              "name": "keyword.separator.pipe.liquid"
            },
            "2": {
              "name": "support.function.filter.liquid"
            }
          }
        },
        {
          "name": "support.function.without-args.liquid",
          "match": "(\\|\\s*)(?![\\.0-9])([a-zA-Z0-9_-]+)\\s*",
          "captures": {
            "1": {
              "name": "keyword.separator.pipe.liquid"
            },
            "2": {
              "name": "support.function.filter.liquid"
            }
          }
        }
      ]
    },
    "inferred": {
      "patterns": [
        {
          "name": "support.class.object-value.liquid",
          "match": "(?<=\\s+\\b(in)\\b\\s+)\\b(\\w+(?!\\.))\\b"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.block.liquid",
          "begin": "\\s*\\b(comment)\\b$",
          "end": "\\s*\\b(endcomment)\\b"
        },
        {
          "name": "comment.line.liquid",
          "begin": "^\\s*\\#\\s*",
          "end": "\\Z"
        }
      ]
    },
    "entities": {
      "patterns": [
        {
          "name": "entity.name.tag.other.liquid",
          "match": "(?<=(?:{%-?\\s*|^))\\s*\\b(\\w+)\\b(?!\\S)"
        },
        {
          "name": "entity.name.tag.iteration.liquid",
          "match": "\\b(?:end)?(for|tablerow|paginate)\\b\\s"
        },
        {
          "name": "entity.name.tag.control.liquid",
          "match": "\\b(break|continue|else)\\b[\\s%-]"
        },
        {
          "name": "entity.name.tag.control.liquid",
          "match": "\\b(cycle|elsif|when)\\b[\\W\\s]"
        },
        {
          "name": "entity.name.tag.conditional.liquid",
          "match": "\\b(?:end)?(if|unless|case)\\b[\\W\\s]"
        },
        {
          "name": "entity.name.tag.embedded.liquid",
          "match": "\\b(?:end)?(form|style|stylesheet|schema|javascript)\\b[\\W\\s]"
        },
        {
          "name": "entity.name.tag.syntax.liquid",
          "match": "\\b(raw|endraw|echo)\\b[\\W\\s]"
        },
        {
          "name": "entity.name.tag.import.liquid",
          "match": "\\b(layout|include|render|section)\\b[\\s'\"]"
        },
        {
          "name": "entity.name.tag.variable.liquid",
          "match": "\\b(assign|capture|endcapture|decrement|increment)\\b[\\W\\s]"
        }
      ]
    },
    "objects": {
      "patterns": [
        {
          "name": "support.class.object.liquid",
          "match": "(?<=[\\s,:=<>\\[\\(])\\s*(?!\\.)\\b([a-zA-Z_][a-zA-Z0-9_-]*)\\b\\s*(?=\\.[a-zA-Z_])"
        },
        {
          "name": "entity.name.tag.object.liquid",
          "match": "\\b(collections|pages|all_products|articles|blogs|color_scheme_group|content_for_header|images|linklists|settings|additional_checkout_buttons|current_tags|powered_by_link)\\b"
        },
        {
          "name": "support.class.object-value.liquid",
          "match": "(?!\\.)\\b(media|address|app|discount|article|block|blog|brand|cart|collection|color|color_scheme|company_address|company|company_location|country|currency|customer|discount_allocation|discount_application|external_video|filter|filter_value_display|filter_value|focal_point|font|form|fulfillment|generic_file|gift_card|image|image_presentation|line_item|link|linklist|forloop|tablerowloop|localization|location|market|measurement|metafield|metaobject_definition|metaobject|metaobject_system|model|model_source|money|order|page|paginate|predictive_search|selling_plan_price_adjustment|product|product_option|product_option_value|swatch|variant|quantity_price_break|rating|recipient|recommendations|request|robots|group|rule|routes|script|search|section|selling_plan_allocation|selling_plan_allocation_price_adjustment|selling_plan_checkout_charge|selling_plan|selling_plan_group|selling_plan_group_option|selling_plan_option|shipping_method|shop|shop_locale|policy|store_availability|tax_line|theme|template|transaction|unit_price_measurement|user|video|video_source|checkout|comment|form_errors|page_image|part|pending_payment_instruction_input|predictive_search_resources|quantity_rule|scripts|sitemap|sort_option|transaction_payment_details|user_agent)\\b(?![\\.])"
        },
        {
          "name": "support.class.object-value.liquid",
          "match": "(?<=\\.\\s*)\\b(media|address|app|discount|article|block|blog|brand|cart|collection|color|color_scheme|company_address|company|company_location|country|currency|customer|discount_allocation|discount_application|external_video|filter|filter_value_display|filter_value|focal_point|font|form|fulfillment|generic_file|gift_card|image|image_presentation|line_item|link|linklist|forloop|tablerowloop|localization|location|market|measurement|metafield|metaobject_definition|metaobject|metaobject_system|model|model_source|money|order|page|paginate|predictive_search|selling_plan_price_adjustment|product|product_option|product_option_value|swatch|variant|quantity_price_break|rating|recipient|recommendations|request|robots|group|rule|routes|script|search|section|selling_plan_allocation|selling_plan_allocation_price_adjustment|selling_plan_checkout_charge|selling_plan|selling_plan_group|selling_plan_group_option|selling_plan_option|shipping_method|shop|shop_locale|policy|store_availability|tax_line|theme|template|transaction|unit_price_measurement|user|video|video_source|checkout|comment|form_errors|page_image|part|pending_payment_instruction_input|predictive_search_resources|quantity_rule|scripts|sitemap|sort_option|transaction_payment_details|user_agent)\\b"
        },
        {
          "name": "string.other.object-value.liquid",
          "match": "\\b(brand_color|all_country_option_tags|canonical_url|content_for_additional_checkout_buttons|content_for_index|content_for_layout|country_option_tags|handle|page_description|page_title)\\b"
        },
        {
          "name": "constant.numeric.object-value.liquid",
          "match": "\\b(current_page)\\b"
        },
        {
          "name": "string.other.property-value.liquid",
          "match": "(?<=(?:media|address|discount|article|block|blog|brand|cart|collection|color|color_scheme|company_address|company|company_location|country|currency|customer|discount_application|external_video|filter|filter_value_display|filter_value|font|form|fulfillment|generic_file|gift_card|image|line_item|link|linklist|location|market|measurement|metafield|metaobject_system|model|model_source|order|page|paginate|predictive_search|selling_plan_price_adjustment|product|product_option|product_option_value|variant|recipient|recommendations|request|rule|routes|script|search|section|selling_plan_allocation|selling_plan_checkout_charge|selling_plan|selling_plan_group|selling_plan_group_option|selling_plan_option|shipping_method|shop|shop_locale|policy|store_availability|tax_line|theme|template|transaction|unit_price_measurement|user|video|video_source|checkout|comment|part|pending_payment_instruction_input|sitemap|sort_option|transaction_payment_details|user_agent)\\s*\\.)\\s*\\b(media_type|alt|company|phone|first_name|last_name|name|url|summary|address1|address2|city|zip|country_code|province_code|street|province|code|title|type|author|handle|id|template_suffix|created_at|published_at|updated_at|comment_post_url|content|excerpt|excerpt_or_content|shopify_attributes|slogan|short_description|note|description|current_vendor|current_type|sort_by|default_sort_by|rgb|rgba|attention|url_to_set_as_current|iso_code|unit_system|continent|symbol|email|target_selection|value_type|target_type|external_id|host|param_name|label|operator|url_to_remove|presentation|value|url_to_add|family|fallback_families|style|body|country|set_as_default_checkbox|message|tracking_company|tracking_number|tracking_url|currency|send_on|expires_on|qr_identifier|pass_url|last_four_characters|src|fulfillment_service|sku|vendor|key|error_message|unit|format|mime_type|cancel_reason|cancel_reason_label|cancelled_at|customer_url|financial_status|fulfillment_status|fulfillment_status_label|confirmation_number|order_status_url|customer_order_url|page_param|terms|selected_value|product_url|barcode|options|option1|option2|option3|weight_unit|inventory_management|inventory_policy|next_incoming_date|nickname|intent|page_type|origin|path|directive|root_url|account_url|account_login_url|account_logout_url|account_recover_url|account_register_url|account_addresses_url|collections_url|all_products_collection_url|search_url|predictive_search_url|cart_url|cart_add_url|cart_change_url|cart_clear_url|cart_update_url|product_recommendations_url|location|selling_plan_group_id|group_id|app_id|secure_url|domain|permanent_domain|password_message|endonym_name|pick_up_time|role|suffix|directory|status|receipt|kind|gateway|status_label|gateway_display_name|buyer_pending_payment_notice|measured_type|quantity_unit|reference_unit|bio|homepage|fulfilled_at|order_id|order_name|order_number|header|credit_card_company|credit_card_last_four_digits|credit_card_number)\\b"
        },
        {
          "name": "constant.numeric.property-value.liquid",
          "match": "(?<=(?:media|address|discount|article|blog|cart|collection|color|company_address|company|company_location|customer|discount_allocation|discount_application|external_video|filter|filter_value|focal_point|font|fulfillment|generic_file|gift_card|image|line_item|link|linklist|forloop|tablerowloop|location|measurement|metaobject_definition|metaobject_system|model|order|page|paginate|selling_plan_price_adjustment|product|product_option|product_option_value|variant|quantity_price_break|rating|recommendations|script|search|section|selling_plan_allocation|selling_plan_allocation_price_adjustment|selling_plan_checkout_charge|selling_plan|selling_plan_group|selling_plan_group_option|selling_plan_option|shipping_method|shop|tax_line|theme|transaction|unit_price_measurement|video|video_source|checkout|comment|quantity_rule)\\s*\\.)\\s*\\b(id|position|amount|total_amount|savings|total_savings|comments_count|articles_count|item_count|total_price|checkout_charge_amount|original_total_price|items_subtotal_price|total_discount|total_weight|products_count|all_products_count|red|green|blue|hue|saturation|lightness|alpha|tax_registration_id|orders_count|total_spent|addresses_count|total_allocated_amount|value|aspect_ratio|range_max|count|x|y|baseline_ratio|weight|balance|initial_value|width|height|product_id|quantity|price|line_price|final_price|final_line_price|variant_id|successfully_fulfilled_quantity|unit_price|original_price|original_line_price|line_level_total_discount|grams|levels|length|index|index0|rindex|rindex0|col|row|col0|latitude|longitude|values_count|total_duties|total_discounts|total_net_amount|tax_price|total_refunded_amount|order_number|line_items_subtotal_price|subtotal_price|shipping_price|page_size|current_offset|current_page|items|pages|order_count|price_min|price_max|compare_at_price_min|compare_at_price_max|compare_at_price|weight_in_unit|inventory_quantity|minimum_quantity|rating|scale_min|scale_max|results_count|per_delivery_price|remaining_balance_charge_amount|collections_count|rate|rate_percentage|quantity_value|reference_value|duration|gift_cards_amount|name|min|max|increment)\\b"
        },
        {
          "name": "constant.language.object-value.liquid",
          "match": "(?<=(?:article|blog|cart|company_location|country|customer|filter_value|font|form|gift_card|image|line_item|link|forloop|tablerowloop|metafield|order|predictive_search|product|product_option_value|variant|recommendations|request|search|selling_plan|selling_plan_group|shop|shop_locale|store_availability|transaction|user|checkout|part)\\s*\\.)\\s*\\b(moderated?|comments_enabled?|requires_shipping|empty?|taxes_included|duties_included|current?|popular?|has_account|accepts_marketing|tax_exempt|b2b?|active|system?|password_needed|posted_successfully?|enabled|expired|attached_to_variant?|taxable|gift_card|current|child_active|child_current|first|last|col_first|col_last|list?|cancelled|pickup_in_store?|performed|price_varies|available|compare_at_price_varies|has_only_default_variant|quantity_price_breaks_configured?|requires_selling_plan|gift_card?|selected|matched|incoming|performed?|design_mode|visual_preview_mode|recurring_deliveries|selling_plan_selected|customer_accounts_enabled|customer_accounts_optional|accepts_gift_cards|primary|pick_up_enabled|show_buyer_pending_payment_instructions?|account_owner|buyer_accepts_marketing|is_link)\\b"
        }
      ]
    }
  }
}