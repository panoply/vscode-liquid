<!-- TEST: Liquid String Injections -->
<div class="{{ object.prop | filter: 'string' }}">

  <!-- TEST: Liquid Attribute Injections -->
  <div
    id="test"
    {% if condition == false %}
      data-id="{{ x }}"
    {% endif %}>
    sss

  </div>

</div>


{% form %}
{% endform %}

{{ section.settings }}

{% assign foo = section.settings %}


<div
  class="hero col mt-{{ section.settings.mt }} mb-{{ section.settings.mb }}"
  data-carousel-desktop-value="1"
  data-carousel-draggable-value="{{ section.settings.draggable }}"
  data-carousel-duration-value="{{ section.settings.duration }}"
  data-carousel-loop-value="{{ section.settings.loop }}"
  data-carousel-mobile-value="1"
  data-carousel-tablet-value="1"
  {% if condition %}
    data-carousel-hydrate-value="true"
    data-carousel-id-value="{{ section.id | base64_encode }}"
  {% else %}
    data-carousel-interval-value="{{ section.settings.interval }}"
  {% endif %}>

  {% assign bar = 'baz' %}
  {% if section.settings.buttons %}
    <div
      class="previous d-flex ai-center"
      {% if foo %}
      {% endif %}>

      {{ foo.button_color }}

      {% capture foo %}
        I will not be formatter
      {% endcapture %}
      {% capture foo %}{% endcapture %}
      {% assign foo = '' %}
      {% capture pros %}
        {{ section.blocks }} {{ foo | append: '' | append: article }}
      {% endcapture %}
      {% if %}
      {% endif %}


      {% liquid
        if if
          foo == bar
        elsif
          'foo'
        endif
        assign name = 'bar'
      %}

      <button
        aria-label="Previous"
        data-action="click->carousel#prev"
        type="button">
        <icon name="chevron-left" />
      </button>


    </div>
    <div class="next d-flex ai-center">
      <button
        aria-label="Next"
        data-action="click->carousel#next"
        type="button">
        <icon name="chevron-right" />
      </button>


    </div>
  {% endif %}
</div>


<ul>
  <li></li>
</ul>


{% liquid
  if xxx
    foo == bar
  elsif
    'foo'
  endif
  assign name = 'bar' | filter: 100
%}


{% liquid
  if foo == bar
    echo 'fff'
  elsif 'foo'
    assign name = 'bar' | filter: 100
  endif
%}


{% # TEST: Liquid Schema Tag Block Validations %}


<!-- TEST: Shopify Schema Tag Block -->
<div
  class="hero col mt-{{ section.settings.mt }} mb-{{ section.settings.mb }}"
  data-carousel-desktop-value="1"
  data-carousel-draggable-value="{{ section.settings.draggable }}"
  data-carousel-duration-value="{{ section.settings.duration }}"
  data-carousel-hydrate-value="true"
  data-carousel-id-value="{{ section.id | base64_encode }}"
  data-carousel-interval-value="{{ section.settings.interval }}"
  data-carousel-loop-value="{{ section.settings.loop }}"
  data-carousel-mobile-value="1"
  data-carousel-tablet-value="1"
  data-controller="carousel">


  {% if section.settings.buttons %}
    <div class="previous d-flex ai-center">
      <button
        aria-label="Previous"
        data-action="click->carousel#prev"
        type="button">
        <icon name="chevron-left" />
      </button>
    </div>
    <div class="next d-flex ai-center">
      <button
        aria-label="Next"
        data-action="click->carousel#next"
        type="button">
        <icon name="chevron-right" />
      </button>
    </div>
  {% endif %}
</div>


{% if block.type == 'collection_links' %}
{% endif %}
{{ section.settings }}


{{ section.settings }}


{% schema %}
  {
    "name": "Collection list",
    "tag": "section",
    "class": "collection-list",
    "max_blocks": 4,
    "settings": [
      {
        "ref": "images.dropdown"
      },
      {
        "type": "range",
        "id": "test_4",
        "label": "Overlay",
        "min": 0,
        "max": 1,
        "step": 0.1,
        "default": 0,
        "info": "Some Text"
      },
      {
        "type": "select",
        "id": "test_2",
        "label": "Align",
        "info": "Hello World",
        "default": "jc-center ai-end",
        "options": [
          {
            "value": "jc-start ai-start",
            "label": "Top Left"
          },
          {
            "value": "jc-center ai-start",
            "label": "Top Center"
          },
          {
            "value": "jc-end ai-start",
            "label": "Top Right"
          },
          {
            "value": "jc-start ai-center",
            "label": "Middle Left"
          },
          {
            "value": "jc-center ai-center",
            "label": "Middle Center"
          },
          {
            "value": "jc-end ai-center",
            "label": "Middle Right"
          },
          {
            "value": "jc-start ai-end",
            "label": "Bottom Left"
          },
          {
            "value": "jc-center ai-end",
            "label": "Bottom Center"
          },
          {
            "value": "jc-end ai-end",
            "label": "Bottom Right"
          }
        ]
      },
      {
        "type": "header",
        "content": "Caption",
        "info": "Customize the text caption to be displayed on each collection image block"
      },
      {
        "type": "radio",
        "id": "type",
        "label": "Text Type",
        "default": "text-normal",
        "options": [
          {
            "value": "text-normal",
            "label": "Normal"
          },
          {
            "value": "text-button",
            "label": "Button"
          }
        ]
      },

      {
        "type": "range",
        "id": "text_size",
        "label": "Text Size",
        "min": 1,
        "max": 6,
        "step": 1,
        "default": 3
      },
      {
        "type": "color",
        "label": "Text Colour",
        "id": "text_color",
        "default": "#ffffff"
      },
      {
        "type": "color",
        "label": "Button Colour",
        "id": "button_color",
        "info": "Only applicable when Text Type is \"Button\", otherwise the preset is ignored.",
        "default": "#111111"
      }
    ],
    "blocks": [
      {

        "type": "collection_gender",
        "name": {
          "en": "Collection Gender"
        },
        "settings": [
          {

            "type": "text",
            "id": "title",
            "label": "Title"
          },
          {
            "type": "collection",
            "id": "url_men",
            "label": "URL"
          },
          {
            "type": "collection",
            "id": "url_women",
            "label": "URL"
          },
          {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
          }
        ]
      },
      {
        "type": "collection_links",
        "name": {
          "en": "Collection Item"
        },
        "settings": [
          {
            "type": "text",
            "id": "title",
            "label": "Title"
          },
          {
            "id": "collection",
            "type": "collection",
            "label": {
              "en": "Collection",
              "de": "Kategorie",
              "fr": "Collection"
            }
          },
          {
            "type": "checkbox",
            "id": "gender_popup",
            "default": false,
            "label": "Gender Popup",
            "info": "Should a gender popup overlay be applied onClick?"
          },
          {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Collection List",
        "category": "Collection",
        "settings": {
          "align": "jc-center ai-end"
        },
        "blocks": [
          {
            "type": "collection_links",
            "settings": {
              "title": "Collection Name"
            }
          },
          {
            "type": "collection_links",
            "settings": {
              "title": "Collection Name"
            }
          },
          {
            "type": "collection_links",
            "settings": {
              "title": "Collection Name"
            }
          }
        ]
      }
    ]
  }
{% endschema %}
